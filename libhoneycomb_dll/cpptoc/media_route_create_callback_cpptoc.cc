// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=35856cbf3eaacfdeceed8d49fa1e6ae066d21fe7$
//

#include "libhoneycomb_dll/cpptoc/media_route_create_callback_cpptoc.h"
#include "libhoneycomb_dll/ctocpp/media_route_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK media_route_create_callback_on_media_route_create_finished(
    struct _honey_media_route_create_callback_t* self,
    honey_media_route_create_result_t result,
    const honey_string_t* error,
    honey_media_route_t* route) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Unverified params: error, route

  // Execute
  HoneycombMediaRouteCreateCallbackCppToC::Get(self)->OnMediaRouteCreateFinished(
      result, HoneycombString(error), HoneycombMediaRouteCToCpp::Wrap(route));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombMediaRouteCreateCallbackCppToC::HoneycombMediaRouteCreateCallbackCppToC() {
  GetStruct()->on_media_route_create_finished =
      media_route_create_callback_on_media_route_create_finished;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombMediaRouteCreateCallbackCppToC::~HoneycombMediaRouteCreateCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombMediaRouteCreateCallback>
HoneycombCppToCRefCounted<HoneycombMediaRouteCreateCallbackCppToC,
                    HoneycombMediaRouteCreateCallback,
                    honey_media_route_create_callback_t>::
    UnwrapDerived(HoneycombWrapperType type, honey_media_route_create_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType
    HoneycombCppToCRefCounted<HoneycombMediaRouteCreateCallbackCppToC,
                        HoneycombMediaRouteCreateCallback,
                        honey_media_route_create_callback_t>::kWrapperType =
        WT_MEDIA_ROUTE_CREATE_CALLBACK;
