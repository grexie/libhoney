// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=222759f34997871512b5f89edc78d1b3a0b0cc69$
//

#include "libhoneycomb_dll/cpptoc/download_item_callback_cpptoc.h"
#include "libhoneycomb_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK
download_item_callback_cancel(struct _honey_download_item_callback_t* self) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombDownloadItemCallbackCppToC::Get(self)->Cancel();
}

void HONEYCOMB_CALLBACK
download_item_callback_pause(struct _honey_download_item_callback_t* self) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombDownloadItemCallbackCppToC::Get(self)->Pause();
}

void HONEYCOMB_CALLBACK
download_item_callback_resume(struct _honey_download_item_callback_t* self) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombDownloadItemCallbackCppToC::Get(self)->Resume();
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombDownloadItemCallbackCppToC::HoneycombDownloadItemCallbackCppToC() {
  GetStruct()->cancel = download_item_callback_cancel;
  GetStruct()->pause = download_item_callback_pause;
  GetStruct()->resume = download_item_callback_resume;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombDownloadItemCallbackCppToC::~HoneycombDownloadItemCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombDownloadItemCallback> HoneycombCppToCRefCounted<
    HoneycombDownloadItemCallbackCppToC,
    HoneycombDownloadItemCallback,
    honey_download_item_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                                 honey_download_item_callback_t*
                                                     s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombDownloadItemCallbackCppToC,
                                   HoneycombDownloadItemCallback,
                                   honey_download_item_callback_t>::kWrapperType =
    WT_DOWNLOAD_ITEM_CALLBACK;
