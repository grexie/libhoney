// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=44561e34afa6d45b0c6c324e345bef6c0e9f31b8$
//

#include "libhoneycomb_dll/cpptoc/v8array_buffer_release_callback_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK v8array_buffer_release_callback_release_buffer(
    struct _honey_v8array_buffer_release_callback_t* self,
    void* buffer) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Verify param: buffer; type: simple_byaddr
  DCHECK(buffer);
  if (!buffer) {
    return;
  }

  // Execute
  HoneycombV8ArrayBufferReleaseCallbackCppToC::Get(self)->ReleaseBuffer(buffer);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombV8ArrayBufferReleaseCallbackCppToC::HoneycombV8ArrayBufferReleaseCallbackCppToC() {
  GetStruct()->release_buffer = v8array_buffer_release_callback_release_buffer;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombV8ArrayBufferReleaseCallbackCppToC::
    ~HoneycombV8ArrayBufferReleaseCallbackCppToC() {}

template <>
HoneycombRefPtr<HoneycombV8ArrayBufferReleaseCallback>
HoneycombCppToCRefCounted<HoneycombV8ArrayBufferReleaseCallbackCppToC,
                    HoneycombV8ArrayBufferReleaseCallback,
                    honey_v8array_buffer_release_callback_t>::
    UnwrapDerived(HoneycombWrapperType type,
                  honey_v8array_buffer_release_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType
    HoneycombCppToCRefCounted<HoneycombV8ArrayBufferReleaseCallbackCppToC,
                        HoneycombV8ArrayBufferReleaseCallback,
                        honey_v8array_buffer_release_callback_t>::kWrapperType =
        WT_V8ARRAY_BUFFER_RELEASE_CALLBACK;
