// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=282e8760f3b06ad59158a4c07b8f44932e827b1d$
//

#include "libhoneycomb_dll/cpptoc/print_job_callback_cpptoc.h"
#include "libhoneycomb_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK
print_job_callback_cont(struct _honey_print_job_callback_t* self) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombPrintJobCallbackCppToC::Get(self)->Continue();
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombPrintJobCallbackCppToC::HoneycombPrintJobCallbackCppToC() {
  GetStruct()->cont = print_job_callback_cont;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombPrintJobCallbackCppToC::~HoneycombPrintJobCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombPrintJobCallback> HoneycombCppToCRefCounted<
    HoneycombPrintJobCallbackCppToC,
    HoneycombPrintJobCallback,
    honey_print_job_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                             honey_print_job_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombPrintJobCallbackCppToC,
                                   HoneycombPrintJobCallback,
                                   honey_print_job_callback_t>::kWrapperType =
    WT_PRINT_JOB_CALLBACK;
