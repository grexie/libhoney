// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=e55e25cbcc3f016810209ddad7d351f021306820$
//

#include "libhoneycomb_dll/cpptoc/run_file_dialog_callback_cpptoc.h"
#include "libhoneycomb_dll/shutdown_checker.h"
#include "libhoneycomb_dll/transfer_util.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK run_file_dialog_callback_on_file_dialog_dismissed(
    struct _honey_run_file_dialog_callback_t* self,
    honey_string_list_t file_paths) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Unverified params: file_paths

  // Translate param: file_paths; type: string_vec_byref_const
  std::vector<HoneycombString> file_pathsList;
  transfer_string_list_contents(file_paths, file_pathsList);

  // Execute
  HoneycombRunFileDialogCallbackCppToC::Get(self)->OnFileDialogDismissed(
      file_pathsList);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombRunFileDialogCallbackCppToC::HoneycombRunFileDialogCallbackCppToC() {
  GetStruct()->on_file_dialog_dismissed =
      run_file_dialog_callback_on_file_dialog_dismissed;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombRunFileDialogCallbackCppToC::~HoneycombRunFileDialogCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombRunFileDialogCallback>
HoneycombCppToCRefCounted<HoneycombRunFileDialogCallbackCppToC,
                    HoneycombRunFileDialogCallback,
                    honey_run_file_dialog_callback_t>::
    UnwrapDerived(HoneycombWrapperType type, honey_run_file_dialog_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType
    HoneycombCppToCRefCounted<HoneycombRunFileDialogCallbackCppToC,
                        HoneycombRunFileDialogCallback,
                        honey_run_file_dialog_callback_t>::kWrapperType =
        WT_RUN_FILE_DIALOG_CALLBACK;
