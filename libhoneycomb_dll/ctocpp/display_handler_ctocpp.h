// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=d45cff7bbeeb6398470dfb56e3e0f4258add36a2$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DISPLAY_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DISPLAY_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include <vector>
#include "include/capi/honey_display_handler_capi.h"
#include "include/honey_display_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombDisplayHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombDisplayHandlerCToCpp,
                                 HoneycombDisplayHandler,
                                 honey_display_handler_t> {
 public:
  HoneycombDisplayHandlerCToCpp();
  virtual ~HoneycombDisplayHandlerCToCpp();

  // HoneycombDisplayHandler methods.
  void OnAddressChange(HoneycombRefPtr<HoneycombBrowser> browser,
                       HoneycombRefPtr<HoneycombFrame> frame,
                       const HoneycombString& url) override;
  void OnTitleChange(HoneycombRefPtr<HoneycombBrowser> browser,
                     const HoneycombString& title) override;
  void OnFaviconURLChange(HoneycombRefPtr<HoneycombBrowser> browser,
                          const std::vector<HoneycombString>& icon_urls) override;
  void OnFullscreenModeChange(HoneycombRefPtr<HoneycombBrowser> browser,
                              bool fullscreen) override;
  bool OnTooltip(HoneycombRefPtr<HoneycombBrowser> browser, HoneycombString& text) override;
  void OnStatusMessage(HoneycombRefPtr<HoneycombBrowser> browser,
                       const HoneycombString& value) override;
  bool OnConsoleMessage(HoneycombRefPtr<HoneycombBrowser> browser,
                        honey_log_severity_t level,
                        const HoneycombString& message,
                        const HoneycombString& source,
                        int line) override;
  bool OnAutoResize(HoneycombRefPtr<HoneycombBrowser> browser,
                    const HoneycombSize& new_size) override;
  void OnLoadingProgressChange(HoneycombRefPtr<HoneycombBrowser> browser,
                               double progress) override;
  bool OnCursorChange(HoneycombRefPtr<HoneycombBrowser> browser,
                      HoneycombCursorHandle cursor,
                      honey_cursor_type_t type,
                      const HoneycombCursorInfo& custom_cursor_info) override;
  void OnMediaAccessChange(HoneycombRefPtr<HoneycombBrowser> browser,
                           bool has_video_access,
                           bool has_audio_access) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DISPLAY_HANDLER_CTOCPP_H_
