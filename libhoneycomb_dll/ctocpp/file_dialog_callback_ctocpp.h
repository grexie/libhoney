// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=75544d28b1d0f0cdfc2f8cb1bd3f521cfe676bce$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FILE_DIALOG_CALLBACK_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FILE_DIALOG_CALLBACK_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include <vector>
#include "include/capi/honey_dialog_handler_capi.h"
#include "include/honey_dialog_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombFileDialogCallbackCToCpp
    : public HoneycombCToCppRefCounted<HoneycombFileDialogCallbackCToCpp,
                                 HoneycombFileDialogCallback,
                                 honey_file_dialog_callback_t> {
 public:
  HoneycombFileDialogCallbackCToCpp();
  virtual ~HoneycombFileDialogCallbackCToCpp();

  // HoneycombFileDialogCallback methods.
  void Continue(const std::vector<HoneycombString>& file_paths) override;
  void Cancel() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FILE_DIALOG_CALLBACK_CTOCPP_H_
