// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=8b86bd425ab5e9283d8fc8ac96b54740bf495cbb$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FIND_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FIND_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_find_handler_capi.h"
#include "include/honey_find_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombFindHandlerCToCpp : public HoneycombCToCppRefCounted<HoneycombFindHandlerCToCpp,
                                                        HoneycombFindHandler,
                                                        honey_find_handler_t> {
 public:
  HoneycombFindHandlerCToCpp();
  virtual ~HoneycombFindHandlerCToCpp();

  // HoneycombFindHandler methods.
  void OnFindResult(HoneycombRefPtr<HoneycombBrowser> browser,
                    int identifier,
                    int count,
                    const HoneycombRect& selectionRect,
                    int activeMatchOrdinal,
                    bool finalUpdate) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_FIND_HANDLER_CTOCPP_H_
