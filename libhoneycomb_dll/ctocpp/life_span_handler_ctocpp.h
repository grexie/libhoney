// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=229117f1ecb1cc27b5ab5eebd79e64c30d73a855$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_LIFE_SPAN_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_LIFE_SPAN_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_client_capi.h"
#include "include/capi/honey_life_span_handler_capi.h"
#include "include/honey_client.h"
#include "include/honey_life_span_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombLifeSpanHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombLifeSpanHandlerCToCpp,
                                 HoneycombLifeSpanHandler,
                                 honey_life_span_handler_t> {
 public:
  HoneycombLifeSpanHandlerCToCpp();
  virtual ~HoneycombLifeSpanHandlerCToCpp();

  // HoneycombLifeSpanHandler methods.
  bool OnBeforePopup(HoneycombRefPtr<HoneycombBrowser> browser,
                     HoneycombRefPtr<HoneycombFrame> frame,
                     const HoneycombString& target_url,
                     const HoneycombString& target_frame_name,
                     WindowOpenDisposition target_disposition,
                     bool user_gesture,
                     const HoneycombPopupFeatures& popupFeatures,
                     HoneycombWindowInfo& windowInfo,
                     HoneycombRefPtr<HoneycombClient>& client,
                     HoneycombBrowserSettings& settings,
                     HoneycombRefPtr<HoneycombDictionaryValue>& extra_info,
                     bool* no_javascript_access) override;
  void OnAfterCreated(HoneycombRefPtr<HoneycombBrowser> browser) override;
  bool DoClose(HoneycombRefPtr<HoneycombBrowser> browser) override;
  void OnBeforeClose(HoneycombRefPtr<HoneycombBrowser> browser) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_LIFE_SPAN_HANDLER_CTOCPP_H_
