// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=1e5030658a4775df8e1eb8bbd54c43cdacf4572a$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_RENDER_PROCESS_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_RENDER_PROCESS_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_render_process_handler_capi.h"
#include "include/honey_render_process_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombRenderProcessHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombRenderProcessHandlerCToCpp,
                                 HoneycombRenderProcessHandler,
                                 honey_render_process_handler_t> {
 public:
  HoneycombRenderProcessHandlerCToCpp();
  virtual ~HoneycombRenderProcessHandlerCToCpp();

  // HoneycombRenderProcessHandler methods.
  void OnWebKitInitialized() override;
  void OnBrowserCreated(HoneycombRefPtr<HoneycombBrowser> browser,
                        HoneycombRefPtr<HoneycombDictionaryValue> extra_info) override;
  void OnBrowserDestroyed(HoneycombRefPtr<HoneycombBrowser> browser) override;
  HoneycombRefPtr<HoneycombLoadHandler> GetLoadHandler() override;
  void OnContextCreated(HoneycombRefPtr<HoneycombBrowser> browser,
                        HoneycombRefPtr<HoneycombFrame> frame,
                        HoneycombRefPtr<HoneycombV8Context> context) override;
  void OnContextReleased(HoneycombRefPtr<HoneycombBrowser> browser,
                         HoneycombRefPtr<HoneycombFrame> frame,
                         HoneycombRefPtr<HoneycombV8Context> context) override;
  void OnUncaughtException(HoneycombRefPtr<HoneycombBrowser> browser,
                           HoneycombRefPtr<HoneycombFrame> frame,
                           HoneycombRefPtr<HoneycombV8Context> context,
                           HoneycombRefPtr<HoneycombV8Exception> exception,
                           HoneycombRefPtr<HoneycombV8StackTrace> stackTrace) override;
  void OnFocusedNodeChanged(HoneycombRefPtr<HoneycombBrowser> browser,
                            HoneycombRefPtr<HoneycombFrame> frame,
                            HoneycombRefPtr<HoneycombDOMNode> node) override;
  bool OnProcessMessageReceived(HoneycombRefPtr<HoneycombBrowser> browser,
                                HoneycombRefPtr<HoneycombFrame> frame,
                                HoneycombProcessId source_process,
                                HoneycombRefPtr<HoneycombProcessMessage> message) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_RENDER_PROCESS_HANDLER_CTOCPP_H_
