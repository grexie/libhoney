// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=fee8d107d6baed8cb7d838613ab4b95134e04c59$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DRAG_DATA_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DRAG_DATA_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include <vector>
#include "include/capi/honey_drag_data_capi.h"
#include "include/honey_drag_data.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombDragDataCToCpp : public HoneycombCToCppRefCounted<HoneycombDragDataCToCpp,
                                                     HoneycombDragData,
                                                     honey_drag_data_t> {
 public:
  HoneycombDragDataCToCpp();
  virtual ~HoneycombDragDataCToCpp();

  // HoneycombDragData methods.
  HoneycombRefPtr<HoneycombDragData> Clone() override;
  bool IsReadOnly() override;
  bool IsLink() override;
  bool IsFragment() override;
  bool IsFile() override;
  HoneycombString GetLinkURL() override;
  HoneycombString GetLinkTitle() override;
  HoneycombString GetLinkMetadata() override;
  HoneycombString GetFragmentText() override;
  HoneycombString GetFragmentHtml() override;
  HoneycombString GetFragmentBaseURL() override;
  HoneycombString GetFileName() override;
  size_t GetFileContents(HoneycombRefPtr<HoneycombStreamWriter> writer) override;
  bool GetFileNames(std::vector<HoneycombString>& names) override;
  bool GetFilePaths(std::vector<HoneycombString>& paths) override;
  void SetLinkURL(const HoneycombString& url) override;
  void SetLinkTitle(const HoneycombString& title) override;
  void SetLinkMetadata(const HoneycombString& data) override;
  void SetFragmentText(const HoneycombString& text) override;
  void SetFragmentHtml(const HoneycombString& html) override;
  void SetFragmentBaseURL(const HoneycombString& base_url) override;
  void ResetFileContents() override;
  void AddFile(const HoneycombString& path, const HoneycombString& display_name) override;
  void ClearFilenames() override;
  HoneycombRefPtr<HoneycombImage> GetImage() override;
  HoneycombPoint GetImageHotspot() override;
  bool HasImage() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DRAG_DATA_CTOCPP_H_
