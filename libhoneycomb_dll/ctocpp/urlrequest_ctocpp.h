// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=8c953a3dd5cdec5cba6160e848884c2f7c9b3ac6$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_URLREQUEST_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_URLREQUEST_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_urlrequest_capi.h"
#include "include/honey_urlrequest.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombURLRequestCToCpp : public HoneycombCToCppRefCounted<HoneycombURLRequestCToCpp,
                                                       HoneycombURLRequest,
                                                       honey_urlrequest_t> {
 public:
  HoneycombURLRequestCToCpp();
  virtual ~HoneycombURLRequestCToCpp();

  // HoneycombURLRequest methods.
  HoneycombRefPtr<HoneycombRequest> GetRequest() override;
  HoneycombRefPtr<HoneycombURLRequestClient> GetClient() override;
  Status GetRequestStatus() override;
  ErrorCode GetRequestError() override;
  HoneycombRefPtr<HoneycombResponse> GetResponse() override;
  bool ResponseWasCached() override;
  void Cancel() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_URLREQUEST_CTOCPP_H_
