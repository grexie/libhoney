// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=71589a699700902297887e1f07de72df32630f15$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PERMISSION_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PERMISSION_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_permission_handler_capi.h"
#include "include/honey_permission_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombPermissionHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombPermissionHandlerCToCpp,
                                 HoneycombPermissionHandler,
                                 honey_permission_handler_t> {
 public:
  HoneycombPermissionHandlerCToCpp();
  virtual ~HoneycombPermissionHandlerCToCpp();

  // HoneycombPermissionHandler methods.
  bool OnRequestMediaAccessPermission(
      HoneycombRefPtr<HoneycombBrowser> browser,
      HoneycombRefPtr<HoneycombFrame> frame,
      const HoneycombString& requesting_origin,
      uint32_t requested_permissions,
      HoneycombRefPtr<HoneycombMediaAccessCallback> callback) override;
  bool OnShowPermissionPrompt(
      HoneycombRefPtr<HoneycombBrowser> browser,
      uint64_t prompt_id,
      const HoneycombString& requesting_origin,
      uint32_t requested_permissions,
      HoneycombRefPtr<HoneycombPermissionPromptCallback> callback) override;
  void OnDismissPermissionPrompt(
      HoneycombRefPtr<HoneycombBrowser> browser,
      uint64_t prompt_id,
      honey_permission_request_result_t result) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PERMISSION_HANDLER_CTOCPP_H_
