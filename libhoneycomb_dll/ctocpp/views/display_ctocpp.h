// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=344eaf627105f0a3b80b44e1d576baa7f2cdc47d$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_VIEWS_DISPLAY_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_VIEWS_DISPLAY_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/views/honey_display_capi.h"
#include "include/views/honey_display.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombDisplayCToCpp
    : public HoneycombCToCppRefCounted<HoneycombDisplayCToCpp, HoneycombDisplay, honey_display_t> {
 public:
  HoneycombDisplayCToCpp();
  virtual ~HoneycombDisplayCToCpp();

  // HoneycombDisplay methods.
  int64_t GetID() override;
  float GetDeviceScaleFactor() override;
  void ConvertPointToPixels(HoneycombPoint& point) override;
  void ConvertPointFromPixels(HoneycombPoint& point) override;
  HoneycombRect GetBounds() override;
  HoneycombRect GetWorkArea() override;
  int GetRotation() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_VIEWS_DISPLAY_CTOCPP_H_
