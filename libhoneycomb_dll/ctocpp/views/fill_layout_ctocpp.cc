// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=28c2bd41db1604637488919fca1375385100595a$
//

#include "libhoneycomb_dll/ctocpp/views/fill_layout_ctocpp.h"
#include "libhoneycomb_dll/ctocpp/views/box_layout_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombBoxLayout> HoneycombFillLayoutCToCpp::AsBoxLayout() {
  shutdown_checker::AssertNotShutdown();

  honey_layout_t* _struct = reinterpret_cast<honey_layout_t*>(GetStruct());
  if (HONEYCOMB_MEMBER_MISSING(_struct, as_box_layout)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_box_layout_t* _retval = _struct->as_box_layout(_struct);

  // Return type: refptr_same
  return HoneycombBoxLayoutCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombFillLayout> HoneycombFillLayoutCToCpp::AsFillLayout() {
  shutdown_checker::AssertNotShutdown();

  honey_layout_t* _struct = reinterpret_cast<honey_layout_t*>(GetStruct());
  if (HONEYCOMB_MEMBER_MISSING(_struct, as_fill_layout)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_fill_layout_t* _retval = _struct->as_fill_layout(_struct);

  // Return type: refptr_same
  return HoneycombFillLayoutCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall") bool HoneycombFillLayoutCToCpp::IsValid() {
  shutdown_checker::AssertNotShutdown();

  honey_layout_t* _struct = reinterpret_cast<honey_layout_t*>(GetStruct());
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_valid)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_valid(_struct);

  // Return type: bool
  return _retval ? true : false;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombFillLayoutCToCpp::HoneycombFillLayoutCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombFillLayoutCToCpp::~HoneycombFillLayoutCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_fill_layout_t*
HoneycombCToCppRefCounted<HoneycombFillLayoutCToCpp, HoneycombFillLayout, honey_fill_layout_t>::
    UnwrapDerived(HoneycombWrapperType type, HoneycombFillLayout* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombFillLayoutCToCpp,
                                   HoneycombFillLayout,
                                   honey_fill_layout_t>::kWrapperType =
    WT_FILL_LAYOUT;
