// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=0387fbd8f6ad59dac67959eeded82630a2bba935$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PDF_PRINT_CALLBACK_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PDF_PRINT_CALLBACK_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_browser_capi.h"
#include "include/capi/honey_client_capi.h"
#include "include/honey_browser.h"
#include "include/honey_client.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombPdfPrintCallbackCToCpp
    : public HoneycombCToCppRefCounted<HoneycombPdfPrintCallbackCToCpp,
                                 HoneycombPdfPrintCallback,
                                 honey_pdf_print_callback_t> {
 public:
  HoneycombPdfPrintCallbackCToCpp();
  virtual ~HoneycombPdfPrintCallbackCToCpp();

  // HoneycombPdfPrintCallback methods.
  void OnPdfPrintFinished(const HoneycombString& path, bool ok) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_PDF_PRINT_CALLBACK_CTOCPP_H_
