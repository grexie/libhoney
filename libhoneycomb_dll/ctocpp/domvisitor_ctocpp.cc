// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=8418f3ac65c441630719aa8f6f44dfcbaf778f2f$
//

#include "libhoneycomb_dll/ctocpp/domvisitor_ctocpp.h"
#include "libhoneycomb_dll/cpptoc/domdocument_cpptoc.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
void HoneycombDOMVisitorCToCpp::Visit(HoneycombRefPtr<HoneycombDOMDocument> document) {
  shutdown_checker::AssertNotShutdown();

  honey_domvisitor_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, visit)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: document; type: refptr_diff
  DCHECK(document.get());
  if (!document.get()) {
    return;
  }

  // Execute
  _struct->visit(_struct, HoneycombDOMDocumentCppToC::Wrap(document));
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombDOMVisitorCToCpp::HoneycombDOMVisitorCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombDOMVisitorCToCpp::~HoneycombDOMVisitorCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_domvisitor_t*
HoneycombCToCppRefCounted<HoneycombDOMVisitorCToCpp, HoneycombDOMVisitor, honey_domvisitor_t>::
    UnwrapDerived(HoneycombWrapperType type, HoneycombDOMVisitor* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombDOMVisitorCToCpp,
                                   HoneycombDOMVisitor,
                                   honey_domvisitor_t>::kWrapperType =
    WT_DOMVISITOR;
