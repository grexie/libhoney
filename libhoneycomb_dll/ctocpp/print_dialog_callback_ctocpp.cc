// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=0c0a1efb7a6ed661e2947b9b820e1fb5b57e0ad3$
//

#include "libhoneycomb_dll/ctocpp/print_dialog_callback_ctocpp.h"
#include "libhoneycomb_dll/ctocpp/print_settings_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
void HoneycombPrintDialogCallbackCToCpp::Continue(
    HoneycombRefPtr<HoneycombPrintSettings> settings) {
  shutdown_checker::AssertNotShutdown();

  honey_print_dialog_callback_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, cont)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: settings; type: refptr_same
  DCHECK(settings.get());
  if (!settings.get()) {
    return;
  }

  // Execute
  _struct->cont(_struct, HoneycombPrintSettingsCToCpp::Unwrap(settings));
}

NO_SANITIZE("cfi-icall") void HoneycombPrintDialogCallbackCToCpp::Cancel() {
  shutdown_checker::AssertNotShutdown();

  honey_print_dialog_callback_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, cancel)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->cancel(_struct);
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombPrintDialogCallbackCToCpp::HoneycombPrintDialogCallbackCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombPrintDialogCallbackCToCpp::~HoneycombPrintDialogCallbackCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_print_dialog_callback_t* HoneycombCToCppRefCounted<
    HoneycombPrintDialogCallbackCToCpp,
    HoneycombPrintDialogCallback,
    honey_print_dialog_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                                HoneycombPrintDialogCallback* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombPrintDialogCallbackCToCpp,
                                   HoneycombPrintDialogCallback,
                                   honey_print_dialog_callback_t>::kWrapperType =
    WT_PRINT_DIALOG_CALLBACK;
