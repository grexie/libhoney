// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=07a08b9dd260059e77dfb433f43686cbc5569bea$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_EXTENSION_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_EXTENSION_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_extension_capi.h"
#include "include/capi/honey_extension_handler_capi.h"
#include "include/capi/honey_request_context_capi.h"
#include "include/honey_extension.h"
#include "include/honey_extension_handler.h"
#include "include/honey_request_context.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombExtensionCToCpp : public HoneycombCToCppRefCounted<HoneycombExtensionCToCpp,
                                                      HoneycombExtension,
                                                      honey_extension_t> {
 public:
  HoneycombExtensionCToCpp();
  virtual ~HoneycombExtensionCToCpp();

  // HoneycombExtension methods.
  HoneycombString GetIdentifier() override;
  HoneycombString GetPath() override;
  HoneycombRefPtr<HoneycombDictionaryValue> GetManifest() override;
  bool IsSame(HoneycombRefPtr<HoneycombExtension> that) override;
  HoneycombRefPtr<HoneycombExtensionHandler> GetHandler() override;
  HoneycombRefPtr<HoneycombRequestContext> GetLoaderContext() override;
  bool IsLoaded() override;
  void Unload() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_EXTENSION_CTOCPP_H_
