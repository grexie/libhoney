// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=f1a192a4341ed6fe0d4b6f8b065b372401e0f055$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_SINK_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_SINK_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_media_router_capi.h"
#include "include/honey_media_router.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombMediaSinkCToCpp : public HoneycombCToCppRefCounted<HoneycombMediaSinkCToCpp,
                                                      HoneycombMediaSink,
                                                      honey_media_sink_t> {
 public:
  HoneycombMediaSinkCToCpp();
  virtual ~HoneycombMediaSinkCToCpp();

  // HoneycombMediaSink methods.
  HoneycombString GetId() override;
  HoneycombString GetName() override;
  IconType GetIconType() override;
  void GetDeviceInfo(
      HoneycombRefPtr<HoneycombMediaSinkDeviceInfoCallback> callback) override;
  bool IsCastSink() override;
  bool IsDialSink() override;
  bool IsCompatibleWith(HoneycombRefPtr<HoneycombMediaSource> source) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_SINK_CTOCPP_H_
