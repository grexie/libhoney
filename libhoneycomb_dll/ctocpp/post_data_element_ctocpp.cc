// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=aa7dd08d585fb1c151ac70040266b2cc6daaa8fd$
//

#include "libhoneycomb_dll/ctocpp/post_data_element_ctocpp.h"

// STATIC METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombPostDataElement> HoneycombPostDataElement::Create() {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_post_data_element_t* _retval = honey_post_data_element_create();

  // Return type: refptr_same
  return HoneycombPostDataElementCToCpp::Wrap(_retval);
}

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall") bool HoneycombPostDataElementCToCpp::IsReadOnly() {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_read_only)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_read_only(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") void HoneycombPostDataElementCToCpp::SetToEmpty() {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, set_to_empty)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->set_to_empty(_struct);
}

NO_SANITIZE("cfi-icall")
void HoneycombPostDataElementCToCpp::SetToFile(const HoneycombString& fileName) {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, set_to_file)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: fileName; type: string_byref_const
  DCHECK(!fileName.empty());
  if (fileName.empty()) {
    return;
  }

  // Execute
  _struct->set_to_file(_struct, fileName.GetStruct());
}

NO_SANITIZE("cfi-icall")
void HoneycombPostDataElementCToCpp::SetToBytes(size_t size, const void* bytes) {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, set_to_bytes)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: bytes; type: simple_byaddr
  DCHECK(bytes);
  if (!bytes) {
    return;
  }

  // Execute
  _struct->set_to_bytes(_struct, size, bytes);
}

NO_SANITIZE("cfi-icall")
HoneycombPostDataElement::Type HoneycombPostDataElementCToCpp::GetType() {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_type)) {
    return PDE_TYPE_EMPTY;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_postdataelement_type_t _retval = _struct->get_type(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombPostDataElementCToCpp::GetFile() {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_file)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_file(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") size_t HoneycombPostDataElementCToCpp::GetBytesCount() {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_bytes_count)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  size_t _retval = _struct->get_bytes_count(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
size_t HoneycombPostDataElementCToCpp::GetBytes(size_t size, void* bytes) {
  honey_post_data_element_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_bytes)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: bytes; type: simple_byaddr
  DCHECK(bytes);
  if (!bytes) {
    return 0;
  }

  // Execute
  size_t _retval = _struct->get_bytes(_struct, size, bytes);

  // Return type: simple
  return _retval;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombPostDataElementCToCpp::HoneycombPostDataElementCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombPostDataElementCToCpp::~HoneycombPostDataElementCToCpp() {}

template <>
honey_post_data_element_t* HoneycombCToCppRefCounted<
    HoneycombPostDataElementCToCpp,
    HoneycombPostDataElement,
    honey_post_data_element_t>::UnwrapDerived(HoneycombWrapperType type,
                                            HoneycombPostDataElement* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombPostDataElementCToCpp,
                                   HoneycombPostDataElement,
                                   honey_post_data_element_t>::kWrapperType =
    WT_POST_DATA_ELEMENT;
