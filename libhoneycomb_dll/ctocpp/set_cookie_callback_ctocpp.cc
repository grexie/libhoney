// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=392363e82a7131e201fe074eda87020b8c2716de$
//

#include "libhoneycomb_dll/ctocpp/set_cookie_callback_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
void HoneycombSetCookieCallbackCToCpp::OnComplete(bool success) {
  shutdown_checker::AssertNotShutdown();

  honey_set_cookie_callback_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, on_complete)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->on_complete(_struct, success);
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombSetCookieCallbackCToCpp::HoneycombSetCookieCallbackCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombSetCookieCallbackCToCpp::~HoneycombSetCookieCallbackCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_set_cookie_callback_t* HoneycombCToCppRefCounted<
    HoneycombSetCookieCallbackCToCpp,
    HoneycombSetCookieCallback,
    honey_set_cookie_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                              HoneycombSetCookieCallback* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombSetCookieCallbackCToCpp,
                                   HoneycombSetCookieCallback,
                                   honey_set_cookie_callback_t>::kWrapperType =
    WT_SET_COOKIE_CALLBACK;
