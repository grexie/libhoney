// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=9f8a534b9feef5b972259d972bf30ad838e1a788$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DOMVISITOR_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DOMVISITOR_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_dom_capi.h"
#include "include/honey_dom.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombDOMVisitorCToCpp : public HoneycombCToCppRefCounted<HoneycombDOMVisitorCToCpp,
                                                       HoneycombDOMVisitor,
                                                       honey_domvisitor_t> {
 public:
  HoneycombDOMVisitorCToCpp();
  virtual ~HoneycombDOMVisitorCToCpp();

  // HoneycombDOMVisitor methods.
  void Visit(HoneycombRefPtr<HoneycombDOMDocument> document) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DOMVISITOR_CTOCPP_H_
