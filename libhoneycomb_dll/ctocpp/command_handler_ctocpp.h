// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=ad0096887a1662a2cc3804248365e56fc20d6eaa$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_COMMAND_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_COMMAND_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_command_handler_capi.h"
#include "include/honey_command_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombCommandHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombCommandHandlerCToCpp,
                                 HoneycombCommandHandler,
                                 honey_command_handler_t> {
 public:
  HoneycombCommandHandlerCToCpp();
  virtual ~HoneycombCommandHandlerCToCpp();

  // HoneycombCommandHandler methods.
  bool OnChromeCommand(HoneycombRefPtr<HoneycombBrowser> browser,
                       int command_id,
                       honey_window_open_disposition_t disposition) override;
  bool IsChromeAppMenuItemVisible(HoneycombRefPtr<HoneycombBrowser> browser,
                                  int command_id) override;
  bool IsChromeAppMenuItemEnabled(HoneycombRefPtr<HoneycombBrowser> browser,
                                  int command_id) override;
  bool IsChromePageActionIconVisible(
      honey_chrome_page_action_icon_type_t icon_type) override;
  bool IsChromeToolbarButtonVisible(
      honey_chrome_toolbar_button_type_t button_type) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_COMMAND_HANDLER_CTOCPP_H_
