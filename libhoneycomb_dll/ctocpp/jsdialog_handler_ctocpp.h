// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=55b3bcb925cfaf44f79c0e03fc55878d748f55ce$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_JSDIALOG_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_JSDIALOG_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_jsdialog_handler_capi.h"
#include "include/honey_jsdialog_handler.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombJSDialogHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombJSDialogHandlerCToCpp,
                                 HoneycombJSDialogHandler,
                                 honey_jsdialog_handler_t> {
 public:
  HoneycombJSDialogHandlerCToCpp();
  virtual ~HoneycombJSDialogHandlerCToCpp();

  // HoneycombJSDialogHandler methods.
  bool OnJSDialog(HoneycombRefPtr<HoneycombBrowser> browser,
                  const HoneycombString& origin_url,
                  JSDialogType dialog_type,
                  const HoneycombString& message_text,
                  const HoneycombString& default_prompt_text,
                  HoneycombRefPtr<HoneycombJSDialogCallback> callback,
                  bool& suppress_message) override;
  bool OnBeforeUnloadDialog(HoneycombRefPtr<HoneycombBrowser> browser,
                            const HoneycombString& message_text,
                            bool is_reload,
                            HoneycombRefPtr<HoneycombJSDialogCallback> callback) override;
  void OnResetDialogState(HoneycombRefPtr<HoneycombBrowser> browser) override;
  void OnDialogClosed(HoneycombRefPtr<HoneycombBrowser> browser) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_JSDIALOG_HANDLER_CTOCPP_H_
