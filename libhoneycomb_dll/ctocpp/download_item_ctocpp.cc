// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=36f3d78a68210e51b75e59dd8521c5d8bbfc12e9$
//

#include "libhoneycomb_dll/ctocpp/download_item_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall") bool HoneycombDownloadItemCToCpp::IsValid() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_valid)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_valid(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombDownloadItemCToCpp::IsInProgress() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_in_progress)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_in_progress(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombDownloadItemCToCpp::IsComplete() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_complete)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_complete(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombDownloadItemCToCpp::IsCanceled() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_canceled)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_canceled(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombDownloadItemCToCpp::IsInterrupted() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_interrupted)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_interrupted(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall")
honey_download_interrupt_reason_t HoneycombDownloadItemCToCpp::GetInterruptReason() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_interrupt_reason)) {
    return HONEYCOMB_DOWNLOAD_INTERRUPT_REASON_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_download_interrupt_reason_t _retval =
      _struct->get_interrupt_reason(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int64_t HoneycombDownloadItemCToCpp::GetCurrentSpeed() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_current_speed)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64_t _retval = _struct->get_current_speed(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int HoneycombDownloadItemCToCpp::GetPercentComplete() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_percent_complete)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_percent_complete(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int64_t HoneycombDownloadItemCToCpp::GetTotalBytes() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_total_bytes)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64_t _retval = _struct->get_total_bytes(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int64_t HoneycombDownloadItemCToCpp::GetReceivedBytes() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_received_bytes)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int64_t _retval = _struct->get_received_bytes(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombBaseTime HoneycombDownloadItemCToCpp::GetStartTime() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_start_time)) {
    return HoneycombBaseTime();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_basetime_t _retval = _struct->get_start_time(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombBaseTime HoneycombDownloadItemCToCpp::GetEndTime() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_end_time)) {
    return HoneycombBaseTime();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_basetime_t _retval = _struct->get_end_time(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDownloadItemCToCpp::GetFullPath() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_full_path)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_full_path(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") uint32_t HoneycombDownloadItemCToCpp::GetId() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_id)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  uint32_t _retval = _struct->get_id(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDownloadItemCToCpp::GetURL() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDownloadItemCToCpp::GetOriginalUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_original_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_original_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombDownloadItemCToCpp::GetSuggestedFileName() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_suggested_file_name)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_suggested_file_name(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombDownloadItemCToCpp::GetContentDisposition() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_content_disposition)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_content_disposition(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDownloadItemCToCpp::GetMimeType() {
  shutdown_checker::AssertNotShutdown();

  honey_download_item_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_mime_type)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_mime_type(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombDownloadItemCToCpp::HoneycombDownloadItemCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombDownloadItemCToCpp::~HoneycombDownloadItemCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_download_item_t*
HoneycombCToCppRefCounted<HoneycombDownloadItemCToCpp,
                    HoneycombDownloadItem,
                    honey_download_item_t>::UnwrapDerived(HoneycombWrapperType type,
                                                        HoneycombDownloadItem* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombDownloadItemCToCpp,
                                   HoneycombDownloadItem,
                                   honey_download_item_t>::kWrapperType =
    WT_DOWNLOAD_ITEM;
