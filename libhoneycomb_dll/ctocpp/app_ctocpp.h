// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=ea433c4f09f9cc1c432e3406dacfe27ec81c20cb$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_APP_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_APP_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_app_capi.h"
#include "include/honey_app.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombAppCToCpp
    : public HoneycombCToCppRefCounted<HoneycombAppCToCpp, HoneycombApp, honey_app_t> {
 public:
  HoneycombAppCToCpp();
  virtual ~HoneycombAppCToCpp();

  // HoneycombApp methods.
  void OnBeforeCommandLineProcessing(
      const HoneycombString& process_type,
      HoneycombRefPtr<HoneycombCommandLine> command_line) override;
  void OnRegisterCustomSchemes(
      HoneycombRawPtr<HoneycombSchemeRegistrar> registrar) override;
  HoneycombRefPtr<HoneycombResourceBundleHandler> GetResourceBundleHandler() override;
  HoneycombRefPtr<HoneycombBrowserProcessHandler> GetBrowserProcessHandler() override;
  HoneycombRefPtr<HoneycombRenderProcessHandler> GetRenderProcessHandler() override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_APP_CTOCPP_H_
