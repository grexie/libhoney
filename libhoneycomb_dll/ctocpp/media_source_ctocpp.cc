// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=f05652f759e16a6f2a3bc5f640ede99e3e123b4d$
//

#include "libhoneycomb_dll/ctocpp/media_source_ctocpp.h"
#include "libhoneycomb_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall") HoneycombString HoneycombMediaSourceCToCpp::GetId() {
  shutdown_checker::AssertNotShutdown();

  honey_media_source_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_id)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_id(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") bool HoneycombMediaSourceCToCpp::IsCastSource() {
  shutdown_checker::AssertNotShutdown();

  honey_media_source_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_cast_source)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_cast_source(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombMediaSourceCToCpp::IsDialSource() {
  shutdown_checker::AssertNotShutdown();

  honey_media_source_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_dial_source)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_dial_source(_struct);

  // Return type: bool
  return _retval ? true : false;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombMediaSourceCToCpp::HoneycombMediaSourceCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombMediaSourceCToCpp::~HoneycombMediaSourceCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_media_source_t*
HoneycombCToCppRefCounted<HoneycombMediaSourceCToCpp, HoneycombMediaSource, honey_media_source_t>::
    UnwrapDerived(HoneycombWrapperType type, HoneycombMediaSource* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombMediaSourceCToCpp,
                                   HoneycombMediaSource,
                                   honey_media_source_t>::kWrapperType =
    WT_MEDIA_SOURCE;
