// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=13f5ab113bea9ee958f3d92e1c10898fd182c14e$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DEV_TOOLS_MESSAGE_OBSERVER_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DEV_TOOLS_MESSAGE_OBSERVER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_browser_capi.h"
#include "include/capi/honey_devtools_message_observer_capi.h"
#include "include/honey_browser.h"
#include "include/honey_devtools_message_observer.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombDevToolsMessageObserverCToCpp
    : public HoneycombCToCppRefCounted<HoneycombDevToolsMessageObserverCToCpp,
                                 HoneycombDevToolsMessageObserver,
                                 honey_dev_tools_message_observer_t> {
 public:
  HoneycombDevToolsMessageObserverCToCpp();
  virtual ~HoneycombDevToolsMessageObserverCToCpp();

  // HoneycombDevToolsMessageObserver methods.
  bool OnDevToolsMessage(HoneycombRefPtr<HoneycombBrowser> browser,
                         const void* message,
                         size_t message_size) override;
  void OnDevToolsMethodResult(HoneycombRefPtr<HoneycombBrowser> browser,
                              int message_id,
                              bool success,
                              const void* result,
                              size_t result_size) override;
  void OnDevToolsEvent(HoneycombRefPtr<HoneycombBrowser> browser,
                       const HoneycombString& method,
                       const void* params,
                       size_t params_size) override;
  void OnDevToolsAgentAttached(HoneycombRefPtr<HoneycombBrowser> browser) override;
  void OnDevToolsAgentDetached(HoneycombRefPtr<HoneycombBrowser> browser) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_DEV_TOOLS_MESSAGE_OBSERVER_CTOCPP_H_
