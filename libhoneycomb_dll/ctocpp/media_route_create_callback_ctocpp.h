// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=ecf8319d38a7ef9e5b5730c55ca299b3a8056018$
//

#ifndef HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_ROUTE_CREATE_CALLBACK_CTOCPP_H_
#define HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_ROUTE_CREATE_CALLBACK_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_media_router_capi.h"
#include "include/honey_media_router.h"
#include "libhoneycomb_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombMediaRouteCreateCallbackCToCpp
    : public HoneycombCToCppRefCounted<HoneycombMediaRouteCreateCallbackCToCpp,
                                 HoneycombMediaRouteCreateCallback,
                                 honey_media_route_create_callback_t> {
 public:
  HoneycombMediaRouteCreateCallbackCToCpp();
  virtual ~HoneycombMediaRouteCreateCallbackCToCpp();

  // HoneycombMediaRouteCreateCallback methods.
  void OnMediaRouteCreateFinished(RouteCreateResult result,
                                  const HoneycombString& error,
                                  HoneycombRefPtr<HoneycombMediaRoute> route) override;
};

#endif  // HONEYCOMB_LIBHONEYCOMB_DLL_CTOCPP_MEDIA_ROUTE_CREATE_CALLBACK_CTOCPP_H_
