// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=ec060a21597376bf3cb198d526c83e457869ca64$
//

#include "libhoney_dll/cpptoc/end_tracing_callback_cpptoc.h"
#include "libhoney_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK end_tracing_callback_on_end_tracing_complete(
    struct _honey_end_tracing_callback_t* self,
    const honey_string_t* tracing_file) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Verify param: tracing_file; type: string_byref_const
  DCHECK(tracing_file);
  if (!tracing_file) {
    return;
  }

  // Execute
  HoneycombEndTracingCallbackCppToC::Get(self)->OnEndTracingComplete(
      HoneycombString(tracing_file));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombEndTracingCallbackCppToC::HoneycombEndTracingCallbackCppToC() {
  GetStruct()->on_end_tracing_complete =
      end_tracing_callback_on_end_tracing_complete;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombEndTracingCallbackCppToC::~HoneycombEndTracingCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombEndTracingCallback> HoneycombCppToCRefCounted<
    HoneycombEndTracingCallbackCppToC,
    HoneycombEndTracingCallback,
    honey_end_tracing_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                               honey_end_tracing_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombEndTracingCallbackCppToC,
                                   HoneycombEndTracingCallback,
                                   honey_end_tracing_callback_t>::kWrapperType =
    WT_END_TRACING_CALLBACK;
