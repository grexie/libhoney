// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=1ed6b4ab7a3ceeab451ba1b898ed91a88f483004$
//

#include "libhoney_dll/cpptoc/pdf_print_callback_cpptoc.h"
#include "libhoney_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK
pdf_print_callback_on_pdf_print_finished(struct _honey_pdf_print_callback_t* self,
                                         const honey_string_t* path,
                                         int ok) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Verify param: path; type: string_byref_const
  DCHECK(path);
  if (!path) {
    return;
  }

  // Execute
  HoneycombPdfPrintCallbackCppToC::Get(self)->OnPdfPrintFinished(HoneycombString(path),
                                                           ok ? true : false);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombPdfPrintCallbackCppToC::HoneycombPdfPrintCallbackCppToC() {
  GetStruct()->on_pdf_print_finished = pdf_print_callback_on_pdf_print_finished;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombPdfPrintCallbackCppToC::~HoneycombPdfPrintCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombPdfPrintCallback> HoneycombCppToCRefCounted<
    HoneycombPdfPrintCallbackCppToC,
    HoneycombPdfPrintCallback,
    honey_pdf_print_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                             honey_pdf_print_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombPdfPrintCallbackCppToC,
                                   HoneycombPdfPrintCallback,
                                   honey_pdf_print_callback_t>::kWrapperType =
    WT_PDF_PRINT_CALLBACK;
