// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=0f0803623b8296300984dd5f93802b32f536a604$
//

#include "libhoney_dll/cpptoc/v8stack_frame_cpptoc.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

int HONEYCOMB_CALLBACK v8stack_frame_is_valid(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return 0;
  }

  // Execute
  bool _retval = HoneycombV8StackFrameCppToC::Get(self)->IsValid();

  // Return type: bool
  return _retval;
}

honey_string_userfree_t HONEYCOMB_CALLBACK
v8stack_frame_get_script_name(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return NULL;
  }

  // Execute
  HoneycombString _retval = HoneycombV8StackFrameCppToC::Get(self)->GetScriptName();

  // Return type: string
  return _retval.DetachToUserFree();
}

honey_string_userfree_t HONEYCOMB_CALLBACK
v8stack_frame_get_script_name_or_source_url(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return NULL;
  }

  // Execute
  HoneycombString _retval =
      HoneycombV8StackFrameCppToC::Get(self)->GetScriptNameOrSourceURL();

  // Return type: string
  return _retval.DetachToUserFree();
}

honey_string_userfree_t HONEYCOMB_CALLBACK
v8stack_frame_get_function_name(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return NULL;
  }

  // Execute
  HoneycombString _retval = HoneycombV8StackFrameCppToC::Get(self)->GetFunctionName();

  // Return type: string
  return _retval.DetachToUserFree();
}

int HONEYCOMB_CALLBACK
v8stack_frame_get_line_number(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return 0;
  }

  // Execute
  int _retval = HoneycombV8StackFrameCppToC::Get(self)->GetLineNumber();

  // Return type: simple
  return _retval;
}

int HONEYCOMB_CALLBACK v8stack_frame_get_column(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return 0;
  }

  // Execute
  int _retval = HoneycombV8StackFrameCppToC::Get(self)->GetColumn();

  // Return type: simple
  return _retval;
}

int HONEYCOMB_CALLBACK v8stack_frame_is_eval(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return 0;
  }

  // Execute
  bool _retval = HoneycombV8StackFrameCppToC::Get(self)->IsEval();

  // Return type: bool
  return _retval;
}

int HONEYCOMB_CALLBACK
v8stack_frame_is_constructor(struct _honey_v8stack_frame_t* self) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return 0;
  }

  // Execute
  bool _retval = HoneycombV8StackFrameCppToC::Get(self)->IsConstructor();

  // Return type: bool
  return _retval;
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombV8StackFrameCppToC::HoneycombV8StackFrameCppToC() {
  GetStruct()->is_valid = v8stack_frame_is_valid;
  GetStruct()->get_script_name = v8stack_frame_get_script_name;
  GetStruct()->get_script_name_or_source_url =
      v8stack_frame_get_script_name_or_source_url;
  GetStruct()->get_function_name = v8stack_frame_get_function_name;
  GetStruct()->get_line_number = v8stack_frame_get_line_number;
  GetStruct()->get_column = v8stack_frame_get_column;
  GetStruct()->is_eval = v8stack_frame_is_eval;
  GetStruct()->is_constructor = v8stack_frame_is_constructor;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombV8StackFrameCppToC::~HoneycombV8StackFrameCppToC() {}

template <>
HoneycombRefPtr<HoneycombV8StackFrame> HoneycombCppToCRefCounted<
    HoneycombV8StackFrameCppToC,
    HoneycombV8StackFrame,
    honey_v8stack_frame_t>::UnwrapDerived(HoneycombWrapperType type,
                                        honey_v8stack_frame_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombV8StackFrameCppToC,
                                   HoneycombV8StackFrame,
                                   honey_v8stack_frame_t>::kWrapperType =
    WT_V8STACK_FRAME;
