// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=65a2338d30ce4e012afe4e272f3c04ca65116f94$
//

#include "libhoney_dll/cpptoc/set_cookie_callback_cpptoc.h"
#include "libhoney_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK
set_cookie_callback_on_complete(struct _honey_set_cookie_callback_t* self,
                                int success) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombSetCookieCallbackCppToC::Get(self)->OnComplete(success ? true : false);
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombSetCookieCallbackCppToC::HoneycombSetCookieCallbackCppToC() {
  GetStruct()->on_complete = set_cookie_callback_on_complete;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombSetCookieCallbackCppToC::~HoneycombSetCookieCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombSetCookieCallback> HoneycombCppToCRefCounted<
    HoneycombSetCookieCallbackCppToC,
    HoneycombSetCookieCallback,
    honey_set_cookie_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                              honey_set_cookie_callback_t* s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombSetCookieCallbackCppToC,
                                   HoneycombSetCookieCallback,
                                   honey_set_cookie_callback_t>::kWrapperType =
    WT_SET_COOKIE_CALLBACK;
