// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=c70076350cd4523b0506236e187e3b3320a9dc5f$
//

#include "libhoney_dll/cpptoc/print_dialog_callback_cpptoc.h"
#include "libhoney_dll/cpptoc/print_settings_cpptoc.h"
#include "libhoney_dll/shutdown_checker.h"

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void HONEYCOMB_CALLBACK
print_dialog_callback_cont(struct _honey_print_dialog_callback_t* self,
                           struct _honey_print_settings_t* settings) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }
  // Verify param: settings; type: refptr_same
  DCHECK(settings);
  if (!settings) {
    return;
  }

  // Execute
  HoneycombPrintDialogCallbackCppToC::Get(self)->Continue(
      HoneycombPrintSettingsCppToC::Unwrap(settings));
}

void HONEYCOMB_CALLBACK
print_dialog_callback_cancel(struct _honey_print_dialog_callback_t* self) {
  shutdown_checker::AssertNotShutdown();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self) {
    return;
  }

  // Execute
  HoneycombPrintDialogCallbackCppToC::Get(self)->Cancel();
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

HoneycombPrintDialogCallbackCppToC::HoneycombPrintDialogCallbackCppToC() {
  GetStruct()->cont = print_dialog_callback_cont;
  GetStruct()->cancel = print_dialog_callback_cancel;
}

// DESTRUCTOR - Do not edit by hand.

HoneycombPrintDialogCallbackCppToC::~HoneycombPrintDialogCallbackCppToC() {
  shutdown_checker::AssertNotShutdown();
}

template <>
HoneycombRefPtr<HoneycombPrintDialogCallback> HoneycombCppToCRefCounted<
    HoneycombPrintDialogCallbackCppToC,
    HoneycombPrintDialogCallback,
    honey_print_dialog_callback_t>::UnwrapDerived(HoneycombWrapperType type,
                                                honey_print_dialog_callback_t*
                                                    s) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCppToCRefCounted<HoneycombPrintDialogCallbackCppToC,
                                   HoneycombPrintDialogCallback,
                                   honey_print_dialog_callback_t>::kWrapperType =
    WT_PRINT_DIALOG_CALLBACK;
