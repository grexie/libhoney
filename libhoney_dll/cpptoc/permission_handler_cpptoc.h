// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=85771f8c4169ad8465d7d53294a2da107ed1a03c$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CPPTOC_PERMISSION_HANDLER_CPPTOC_H_
#define HONEYCOMB_LIBHONEY_DLL_CPPTOC_PERMISSION_HANDLER_CPPTOC_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_permission_handler_capi.h"
#include "include/honey_permission_handler.h"
#include "libhoney_dll/cpptoc/cpptoc_ref_counted.h"

// Wrap a C++ class with a C structure.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombPermissionHandlerCppToC
    : public HoneycombCppToCRefCounted<HoneycombPermissionHandlerCppToC,
                                 HoneycombPermissionHandler,
                                 honey_permission_handler_t> {
 public:
  HoneycombPermissionHandlerCppToC();
  virtual ~HoneycombPermissionHandlerCppToC();
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CPPTOC_PERMISSION_HANDLER_CPPTOC_H_
