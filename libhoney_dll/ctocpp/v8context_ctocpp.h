// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=c5159f67aa8d77aca23153cf6c35468af27dba14$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8CONTEXT_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8CONTEXT_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_v8_capi.h"
#include "include/honey_v8.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombV8ContextCToCpp : public HoneycombCToCppRefCounted<HoneycombV8ContextCToCpp,
                                                      HoneycombV8Context,
                                                      honey_v8context_t> {
 public:
  HoneycombV8ContextCToCpp();
  virtual ~HoneycombV8ContextCToCpp();

  // HoneycombV8Context methods.
  HoneycombRefPtr<HoneycombTaskRunner> GetTaskRunner() override;
  bool IsValid() override;
  HoneycombRefPtr<HoneycombBrowser> GetBrowser() override;
  HoneycombRefPtr<HoneycombFrame> GetFrame() override;
  HoneycombRefPtr<HoneycombV8Value> GetGlobal() override;
  bool Enter() override;
  bool Exit() override;
  bool IsSame(HoneycombRefPtr<HoneycombV8Context> that) override;
  bool Eval(const HoneycombString& code,
            const HoneycombString& script_url,
            int start_line,
            HoneycombRefPtr<HoneycombV8Value>& retval,
            HoneycombRefPtr<HoneycombV8Exception>& exception) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8CONTEXT_CTOCPP_H_
