// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=75238f577e768438cead970fa7362e4b04856894$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_print_settings_capi.h"
#include "include/honey_print_settings.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombPrintSettingsCToCpp
    : public HoneycombCToCppRefCounted<HoneycombPrintSettingsCToCpp,
                                 HoneycombPrintSettings,
                                 honey_print_settings_t> {
 public:
  HoneycombPrintSettingsCToCpp();
  virtual ~HoneycombPrintSettingsCToCpp();

  // HoneycombPrintSettings methods.
  bool IsValid() override;
  bool IsReadOnly() override;
  void SetOrientation(bool landscape) override;
  bool IsLandscape() override;
  void SetPrinterPrintableArea(const HoneycombSize& physical_size_device_units,
                               const HoneycombRect& printable_area_device_units,
                               bool landscape_needs_flip) override;
  void SetDeviceName(const HoneycombString& name) override;
  HoneycombString GetDeviceName() override;
  void SetDPI(int dpi) override;
  int GetDPI() override;
  void SetPageRanges(const PageRangeList& ranges) override;
  size_t GetPageRangesCount() override;
  void GetPageRanges(PageRangeList& ranges) override;
  void SetSelectionOnly(bool selection_only) override;
  bool IsSelectionOnly() override;
  void SetCollate(bool collate) override;
  bool WillCollate() override;
  void SetColorModel(ColorModel model) override;
  ColorModel GetColorModel() override;
  void SetCopies(int copies) override;
  int GetCopies() override;
  void SetDuplexMode(DuplexMode mode) override;
  DuplexMode GetDuplexMode() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_PRINT_SETTINGS_CTOCPP_H_
