// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=0bed1f616f1ae42a7eb755dba59b329cd600abff$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_SERVER_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_SERVER_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_server_capi.h"
#include "include/honey_server.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombServerHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombServerHandlerCToCpp,
                                 HoneycombServerHandler,
                                 honey_server_handler_t> {
 public:
  HoneycombServerHandlerCToCpp();
  virtual ~HoneycombServerHandlerCToCpp();

  // HoneycombServerHandler methods.
  void OnServerCreated(HoneycombRefPtr<HoneycombServer> server) override;
  void OnServerDestroyed(HoneycombRefPtr<HoneycombServer> server) override;
  void OnClientConnected(HoneycombRefPtr<HoneycombServer> server,
                         int connection_id) override;
  void OnClientDisconnected(HoneycombRefPtr<HoneycombServer> server,
                            int connection_id) override;
  void OnHttpRequest(HoneycombRefPtr<HoneycombServer> server,
                     int connection_id,
                     const HoneycombString& client_address,
                     HoneycombRefPtr<HoneycombRequest> request) override;
  void OnWebSocketRequest(HoneycombRefPtr<HoneycombServer> server,
                          int connection_id,
                          const HoneycombString& client_address,
                          HoneycombRefPtr<HoneycombRequest> request,
                          HoneycombRefPtr<HoneycombCallback> callback) override;
  void OnWebSocketConnected(HoneycombRefPtr<HoneycombServer> server,
                            int connection_id) override;
  void OnWebSocketMessage(HoneycombRefPtr<HoneycombServer> server,
                          int connection_id,
                          const void* data,
                          size_t data_size) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_SERVER_HANDLER_CTOCPP_H_
