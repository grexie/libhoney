// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=7605dec503f07e4490341d3b60d2a4c0179a3d53$
//

#include "libhoney_dll/ctocpp/domdocument_ctocpp.h"
#include "libhoney_dll/ctocpp/domnode_ctocpp.h"
#include "libhoney_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall") HoneycombDOMDocument::Type HoneycombDOMDocumentCToCpp::GetType() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_type)) {
    return DOM_DOCUMENT_TYPE_UNKNOWN;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_dom_document_type_t _retval = _struct->get_type(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombDOMNode> HoneycombDOMDocumentCToCpp::GetDocument() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_document)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_domnode_t* _retval = _struct->get_document(_struct);

  // Return type: refptr_same
  return HoneycombDOMNodeCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall") HoneycombRefPtr<HoneycombDOMNode> HoneycombDOMDocumentCToCpp::GetBody() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_body)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_domnode_t* _retval = _struct->get_body(_struct);

  // Return type: refptr_same
  return HoneycombDOMNodeCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall") HoneycombRefPtr<HoneycombDOMNode> HoneycombDOMDocumentCToCpp::GetHead() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_head)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_domnode_t* _retval = _struct->get_head(_struct);

  // Return type: refptr_same
  return HoneycombDOMNodeCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDOMDocumentCToCpp::GetTitle() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_title)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_title(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombDOMNode> HoneycombDOMDocumentCToCpp::GetElementById(
    const HoneycombString& id) {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_element_by_id)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: id; type: string_byref_const
  DCHECK(!id.empty());
  if (id.empty()) {
    return nullptr;
  }

  // Execute
  honey_domnode_t* _retval = _struct->get_element_by_id(_struct, id.GetStruct());

  // Return type: refptr_same
  return HoneycombDOMNodeCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall")
HoneycombRefPtr<HoneycombDOMNode> HoneycombDOMDocumentCToCpp::GetFocusedNode() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_focused_node)) {
    return nullptr;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_domnode_t* _retval = _struct->get_focused_node(_struct);

  // Return type: refptr_same
  return HoneycombDOMNodeCToCpp::Wrap(_retval);
}

NO_SANITIZE("cfi-icall") bool HoneycombDOMDocumentCToCpp::HasSelection() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, has_selection)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->has_selection(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") int HoneycombDOMDocumentCToCpp::GetSelectionStartOffset() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_selection_start_offset)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_selection_start_offset(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int HoneycombDOMDocumentCToCpp::GetSelectionEndOffset() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_selection_end_offset)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_selection_end_offset(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombDOMDocumentCToCpp::GetSelectionAsMarkup() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_selection_as_markup)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_selection_as_markup(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDOMDocumentCToCpp::GetSelectionAsText() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_selection_as_text)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_selection_as_text(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombDOMDocumentCToCpp::GetBaseURL() {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_base_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_base_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombDOMDocumentCToCpp::GetCompleteURL(const HoneycombString& partialURL) {
  shutdown_checker::AssertNotShutdown();

  honey_domdocument_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_complete_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Verify param: partialURL; type: string_byref_const
  DCHECK(!partialURL.empty());
  if (partialURL.empty()) {
    return HoneycombString();
  }

  // Execute
  honey_string_userfree_t _retval =
      _struct->get_complete_url(_struct, partialURL.GetStruct());

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombDOMDocumentCToCpp::HoneycombDOMDocumentCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombDOMDocumentCToCpp::~HoneycombDOMDocumentCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_domdocument_t*
HoneycombCToCppRefCounted<HoneycombDOMDocumentCToCpp, HoneycombDOMDocument, honey_domdocument_t>::
    UnwrapDerived(HoneycombWrapperType type, HoneycombDOMDocument* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombDOMDocumentCToCpp,
                                   HoneycombDOMDocument,
                                   honey_domdocument_t>::kWrapperType =
    WT_DOMDOCUMENT;
