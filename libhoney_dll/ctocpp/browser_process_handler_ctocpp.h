// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5dd3fc70331d85a1c7ce5e402bc1e2f050fbe467$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_BROWSER_PROCESS_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_BROWSER_PROCESS_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_browser_process_handler_capi.h"
#include "include/honey_browser_process_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombBrowserProcessHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombBrowserProcessHandlerCToCpp,
                                 HoneycombBrowserProcessHandler,
                                 honey_browser_process_handler_t> {
 public:
  HoneycombBrowserProcessHandlerCToCpp();
  virtual ~HoneycombBrowserProcessHandlerCToCpp();

  // HoneycombBrowserProcessHandler methods.
  void OnRegisterCustomPreferences(
      honey_preferences_type_t type,
      HoneycombRawPtr<HoneycombPreferenceRegistrar> registrar) override;
  void OnContextInitialized() override;
  void OnBeforeChildProcessLaunch(
      HoneycombRefPtr<HoneycombCommandLine> command_line) override;
  void OnScheduleMessagePumpWork(int64_t delay_ms) override;
  HoneycombRefPtr<HoneycombClient> GetDefaultClient() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_BROWSER_PROCESS_HANDLER_CTOCPP_H_
