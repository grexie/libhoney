// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=c8f6db85d4b577c287a587a72aa11d6e10f55d78$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_MEDIA_ROUTE_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_MEDIA_ROUTE_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_media_router_capi.h"
#include "include/honey_media_router.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombMediaRouteCToCpp : public HoneycombCToCppRefCounted<HoneycombMediaRouteCToCpp,
                                                       HoneycombMediaRoute,
                                                       honey_media_route_t> {
 public:
  HoneycombMediaRouteCToCpp();
  virtual ~HoneycombMediaRouteCToCpp();

  // HoneycombMediaRoute methods.
  HoneycombString GetId() override;
  HoneycombRefPtr<HoneycombMediaSource> GetSource() override;
  HoneycombRefPtr<HoneycombMediaSink> GetSink() override;
  void SendRouteMessage(const void* message, size_t message_size) override;
  void Terminate() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_MEDIA_ROUTE_CTOCPP_H_
