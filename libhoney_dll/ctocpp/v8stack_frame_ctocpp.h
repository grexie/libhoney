// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=366d110fdfaf3d241c26e9ec276f7c363ecd313f$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8STACK_FRAME_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8STACK_FRAME_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_v8_capi.h"
#include "include/honey_v8.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombV8StackFrameCToCpp : public HoneycombCToCppRefCounted<HoneycombV8StackFrameCToCpp,
                                                         HoneycombV8StackFrame,
                                                         honey_v8stack_frame_t> {
 public:
  HoneycombV8StackFrameCToCpp();
  virtual ~HoneycombV8StackFrameCToCpp();

  // HoneycombV8StackFrame methods.
  bool IsValid() override;
  HoneycombString GetScriptName() override;
  HoneycombString GetScriptNameOrSourceURL() override;
  HoneycombString GetFunctionName() override;
  int GetLineNumber() override;
  int GetColumn() override;
  bool IsEval() override;
  bool IsConstructor() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_V8STACK_FRAME_CTOCPP_H_
