// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=32bf297fed4117e7a49ec5286fa05a51b2bf106b$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_DIALOG_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_DIALOG_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include <vector>
#include "include/capi/honey_dialog_handler_capi.h"
#include "include/honey_dialog_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombDialogHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombDialogHandlerCToCpp,
                                 HoneycombDialogHandler,
                                 honey_dialog_handler_t> {
 public:
  HoneycombDialogHandlerCToCpp();
  virtual ~HoneycombDialogHandlerCToCpp();

  // HoneycombDialogHandler methods.
  bool OnFileDialog(HoneycombRefPtr<HoneycombBrowser> browser,
                    FileDialogMode mode,
                    const HoneycombString& title,
                    const HoneycombString& default_file_path,
                    const std::vector<HoneycombString>& accept_filters,
                    HoneycombRefPtr<HoneycombFileDialogCallback> callback) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_DIALOG_HANDLER_CTOCPP_H_
