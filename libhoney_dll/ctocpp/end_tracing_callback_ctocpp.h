// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=d798b3255a8ad2aea9d4afbe3492eaad538d8d0a$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_END_TRACING_CALLBACK_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_END_TRACING_CALLBACK_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_trace_capi.h"
#include "include/honey_trace.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombEndTracingCallbackCToCpp
    : public HoneycombCToCppRefCounted<HoneycombEndTracingCallbackCToCpp,
                                 HoneycombEndTracingCallback,
                                 honey_end_tracing_callback_t> {
 public:
  HoneycombEndTracingCallbackCToCpp();
  virtual ~HoneycombEndTracingCallbackCToCpp();

  // HoneycombEndTracingCallback methods.
  void OnEndTracingComplete(const HoneycombString& tracing_file) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_END_TRACING_CALLBACK_CTOCPP_H_
