// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=cf099f71fe1c451ca650912e7ba34ef54f2aa61b$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_PROCESS_MESSAGE_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_PROCESS_MESSAGE_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_process_message_capi.h"
#include "include/honey_process_message.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombProcessMessageCToCpp
    : public HoneycombCToCppRefCounted<HoneycombProcessMessageCToCpp,
                                 HoneycombProcessMessage,
                                 honey_process_message_t> {
 public:
  HoneycombProcessMessageCToCpp();
  virtual ~HoneycombProcessMessageCToCpp();

  // HoneycombProcessMessage methods.
  bool IsValid() override;
  bool IsReadOnly() override;
  HoneycombRefPtr<HoneycombProcessMessage> Copy() override;
  HoneycombString GetName() override;
  HoneycombRefPtr<HoneycombListValue> GetArgumentList() override;
  HoneycombRefPtr<HoneycombSharedMemoryRegion> GetSharedMemoryRegion() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_PROCESS_MESSAGE_CTOCPP_H_
