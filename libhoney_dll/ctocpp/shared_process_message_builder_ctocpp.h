// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=de0791f744ddb7e9e9256bb120f233cb64826188$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_SHARED_PROCESS_MESSAGE_BUILDER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_SHARED_PROCESS_MESSAGE_BUILDER_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_shared_process_message_builder_capi.h"
#include "include/honey_shared_process_message_builder.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombSharedProcessMessageBuilderCToCpp
    : public HoneycombCToCppRefCounted<HoneycombSharedProcessMessageBuilderCToCpp,
                                 HoneycombSharedProcessMessageBuilder,
                                 honey_shared_process_message_builder_t> {
 public:
  HoneycombSharedProcessMessageBuilderCToCpp();
  virtual ~HoneycombSharedProcessMessageBuilderCToCpp();

  // HoneycombSharedProcessMessageBuilder methods.
  bool IsValid() override;
  size_t Size() override;
  void* Memory() override;
  HoneycombRefPtr<HoneycombProcessMessage> Build() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_SHARED_PROCESS_MESSAGE_BUILDER_CTOCPP_H_
