// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=65dedd950d154a0125b094bb1488e787726545cb$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_VIEWS_TEXTFIELD_DELEGATE_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_VIEWS_TEXTFIELD_DELEGATE_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/views/honey_textfield_capi.h"
#include "include/capi/views/honey_textfield_delegate_capi.h"
#include "include/views/honey_textfield.h"
#include "include/views/honey_textfield_delegate.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombTextfieldDelegateCToCpp
    : public HoneycombCToCppRefCounted<HoneycombTextfieldDelegateCToCpp,
                                 HoneycombTextfieldDelegate,
                                 honey_textfield_delegate_t> {
 public:
  HoneycombTextfieldDelegateCToCpp();
  virtual ~HoneycombTextfieldDelegateCToCpp();

  // HoneycombTextfieldDelegate methods.
  bool OnKeyEvent(HoneycombRefPtr<HoneycombTextfield> textfield,
                  const HoneycombKeyEvent& event) override;
  void OnAfterUserAction(HoneycombRefPtr<HoneycombTextfield> textfield) override;

  // HoneycombViewDelegate methods.
  HoneycombSize GetPreferredSize(HoneycombRefPtr<HoneycombView> view) override;
  HoneycombSize GetMinimumSize(HoneycombRefPtr<HoneycombView> view) override;
  HoneycombSize GetMaximumSize(HoneycombRefPtr<HoneycombView> view) override;
  int GetHeightForWidth(HoneycombRefPtr<HoneycombView> view, int width) override;
  void OnParentViewChanged(HoneycombRefPtr<HoneycombView> view,
                           bool added,
                           HoneycombRefPtr<HoneycombView> parent) override;
  void OnChildViewChanged(HoneycombRefPtr<HoneycombView> view,
                          bool added,
                          HoneycombRefPtr<HoneycombView> child) override;
  void OnWindowChanged(HoneycombRefPtr<HoneycombView> view, bool added) override;
  void OnLayoutChanged(HoneycombRefPtr<HoneycombView> view,
                       const HoneycombRect& new_bounds) override;
  void OnFocus(HoneycombRefPtr<HoneycombView> view) override;
  void OnBlur(HoneycombRefPtr<HoneycombView> view) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_VIEWS_TEXTFIELD_DELEGATE_CTOCPP_H_
