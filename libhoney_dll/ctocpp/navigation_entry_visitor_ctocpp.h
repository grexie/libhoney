// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=3dbe29abccbfa1d1cc7014630bbe312d9de42ac8$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_NAVIGATION_ENTRY_VISITOR_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_NAVIGATION_ENTRY_VISITOR_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_browser_capi.h"
#include "include/capi/honey_client_capi.h"
#include "include/honey_browser.h"
#include "include/honey_client.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombNavigationEntryVisitorCToCpp
    : public HoneycombCToCppRefCounted<HoneycombNavigationEntryVisitorCToCpp,
                                 HoneycombNavigationEntryVisitor,
                                 honey_navigation_entry_visitor_t> {
 public:
  HoneycombNavigationEntryVisitorCToCpp();
  virtual ~HoneycombNavigationEntryVisitorCToCpp();

  // HoneycombNavigationEntryVisitor methods.
  bool Visit(HoneycombRefPtr<HoneycombNavigationEntry> entry,
             bool current,
             int index,
             int total) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_NAVIGATION_ENTRY_VISITOR_CTOCPP_H_
