// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=87e133cdd2e856ab8a9d45d990972e08a7a69fbc$
//

#include "libhoney_dll/ctocpp/media_route_create_callback_ctocpp.h"
#include "libhoney_dll/cpptoc/media_route_cpptoc.h"
#include "libhoney_dll/shutdown_checker.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
void HoneycombMediaRouteCreateCallbackCToCpp::OnMediaRouteCreateFinished(
    RouteCreateResult result,
    const HoneycombString& error,
    HoneycombRefPtr<HoneycombMediaRoute> route) {
  shutdown_checker::AssertNotShutdown();

  honey_media_route_create_callback_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, on_media_route_create_finished)) {
    return;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Unverified params: error, route

  // Execute
  _struct->on_media_route_create_finished(_struct, result, error.GetStruct(),
                                          HoneycombMediaRouteCppToC::Wrap(route));
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombMediaRouteCreateCallbackCToCpp::HoneycombMediaRouteCreateCallbackCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombMediaRouteCreateCallbackCToCpp::~HoneycombMediaRouteCreateCallbackCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_media_route_create_callback_t*
HoneycombCToCppRefCounted<HoneycombMediaRouteCreateCallbackCToCpp,
                    HoneycombMediaRouteCreateCallback,
                    honey_media_route_create_callback_t>::
    UnwrapDerived(HoneycombWrapperType type, HoneycombMediaRouteCreateCallback* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType
    HoneycombCToCppRefCounted<HoneycombMediaRouteCreateCallbackCToCpp,
                        HoneycombMediaRouteCreateCallback,
                        honey_media_route_create_callback_t>::kWrapperType =
        WT_MEDIA_ROUTE_CREATE_CALLBACK;
