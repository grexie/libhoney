// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=75967117879bf3ecf86bc170fa5161fc00ab236b$
//

#include "libhoney_dll/ctocpp/context_menu_params_ctocpp.h"
#include "libhoney_dll/shutdown_checker.h"
#include "libhoney_dll/transfer_util.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall") int HoneycombContextMenuParamsCToCpp::GetXCoord() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_xcoord)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_xcoord(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") int HoneycombContextMenuParamsCToCpp::GetYCoord() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_ycoord)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_ycoord(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
HoneycombContextMenuParams::TypeFlags HoneycombContextMenuParamsCToCpp::GetTypeFlags() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_type_flags)) {
    return CM_TYPEFLAG_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_context_menu_type_flags_t _retval = _struct->get_type_flags(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombContextMenuParamsCToCpp::GetLinkUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_link_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_link_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombContextMenuParamsCToCpp::GetUnfilteredLinkUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_unfiltered_link_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_unfiltered_link_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombContextMenuParamsCToCpp::GetSourceUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_source_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_source_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") bool HoneycombContextMenuParamsCToCpp::HasImageContents() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, has_image_contents)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->has_image_contents(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombContextMenuParamsCToCpp::GetTitleText() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_title_text)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_title_text(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombContextMenuParamsCToCpp::GetPageUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_page_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_page_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall") HoneycombString HoneycombContextMenuParamsCToCpp::GetFrameUrl() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_frame_url)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_frame_url(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombContextMenuParamsCToCpp::GetFrameCharset() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_frame_charset)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_frame_charset(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombContextMenuParams::MediaType HoneycombContextMenuParamsCToCpp::GetMediaType() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_media_type)) {
    return CM_MEDIATYPE_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_context_menu_media_type_t _retval = _struct->get_media_type(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
HoneycombContextMenuParams::MediaStateFlags
HoneycombContextMenuParamsCToCpp::GetMediaStateFlags() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_media_state_flags)) {
    return CM_MEDIAFLAG_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_context_menu_media_state_flags_t _retval =
      _struct->get_media_state_flags(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombContextMenuParamsCToCpp::GetSelectionText() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_selection_text)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_selection_text(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
HoneycombString HoneycombContextMenuParamsCToCpp::GetMisspelledWord() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_misspelled_word)) {
    return HoneycombString();
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_string_userfree_t _retval = _struct->get_misspelled_word(_struct);

  // Return type: string
  HoneycombString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

NO_SANITIZE("cfi-icall")
bool HoneycombContextMenuParamsCToCpp::GetDictionarySuggestions(
    std::vector<HoneycombString>& suggestions) {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_dictionary_suggestions)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Translate param: suggestions; type: string_vec_byref
  honey_string_list_t suggestionsList = honey_string_list_alloc();
  DCHECK(suggestionsList);
  if (suggestionsList) {
    transfer_string_list_contents(suggestions, suggestionsList);
  }

  // Execute
  int _retval = _struct->get_dictionary_suggestions(_struct, suggestionsList);

  // Restore param:suggestions; type: string_vec_byref
  if (suggestionsList) {
    suggestions.clear();
    transfer_string_list_contents(suggestionsList, suggestions);
    honey_string_list_free(suggestionsList);
  }

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall") bool HoneycombContextMenuParamsCToCpp::IsEditable() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_editable)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_editable(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall")
bool HoneycombContextMenuParamsCToCpp::IsSpellCheckEnabled() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_spell_check_enabled)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_spell_check_enabled(_struct);

  // Return type: bool
  return _retval ? true : false;
}

NO_SANITIZE("cfi-icall")
HoneycombContextMenuParams::EditStateFlags
HoneycombContextMenuParamsCToCpp::GetEditStateFlags() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_edit_state_flags)) {
    return CM_EDITFLAG_NONE;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  honey_context_menu_edit_state_flags_t _retval =
      _struct->get_edit_state_flags(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall") bool HoneycombContextMenuParamsCToCpp::IsCustomMenu() {
  shutdown_checker::AssertNotShutdown();

  honey_context_menu_params_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, is_custom_menu)) {
    return false;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->is_custom_menu(_struct);

  // Return type: bool
  return _retval ? true : false;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombContextMenuParamsCToCpp::HoneycombContextMenuParamsCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombContextMenuParamsCToCpp::~HoneycombContextMenuParamsCToCpp() {
  shutdown_checker::AssertNotShutdown();
}

template <>
honey_context_menu_params_t* HoneycombCToCppRefCounted<
    HoneycombContextMenuParamsCToCpp,
    HoneycombContextMenuParams,
    honey_context_menu_params_t>::UnwrapDerived(HoneycombWrapperType type,
                                              HoneycombContextMenuParams* c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType HoneycombCToCppRefCounted<HoneycombContextMenuParamsCToCpp,
                                   HoneycombContextMenuParams,
                                   honey_context_menu_params_t>::kWrapperType =
    WT_CONTEXT_MENU_PARAMS;
