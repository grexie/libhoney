// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=a81732545889a9d401edb7f5540e0762bb787526$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_POST_DATA_ELEMENT_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_POST_DATA_ELEMENT_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_request_capi.h"
#include "include/honey_request.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombPostDataElementCToCpp
    : public HoneycombCToCppRefCounted<HoneycombPostDataElementCToCpp,
                                 HoneycombPostDataElement,
                                 honey_post_data_element_t> {
 public:
  HoneycombPostDataElementCToCpp();
  virtual ~HoneycombPostDataElementCToCpp();

  // HoneycombPostDataElement methods.
  bool IsReadOnly() override;
  void SetToEmpty() override;
  void SetToFile(const HoneycombString& fileName) override;
  void SetToBytes(size_t size, const void* bytes) override;
  Type GetType() override;
  HoneycombString GetFile() override;
  size_t GetBytesCount() override;
  size_t GetBytes(size_t size, void* bytes) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_POST_DATA_ELEMENT_CTOCPP_H_
