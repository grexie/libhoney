// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=80621c9fcd1e112984ddb490da40034e9731d530$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_VALUE_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_VALUE_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/honey_values_capi.h"
#include "include/honey_values.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombValueCToCpp
    : public HoneycombCToCppRefCounted<HoneycombValueCToCpp, HoneycombValue, honey_value_t> {
 public:
  HoneycombValueCToCpp();
  virtual ~HoneycombValueCToCpp();

  // HoneycombValue methods.
  bool IsValid() override;
  bool IsOwned() override;
  bool IsReadOnly() override;
  bool IsSame(HoneycombRefPtr<HoneycombValue> that) override;
  bool IsEqual(HoneycombRefPtr<HoneycombValue> that) override;
  HoneycombRefPtr<HoneycombValue> Copy() override;
  HoneycombValueType GetType() override;
  bool GetBool() override;
  int GetInt() override;
  double GetDouble() override;
  HoneycombString GetString() override;
  HoneycombRefPtr<HoneycombBinaryValue> GetBinary() override;
  HoneycombRefPtr<HoneycombDictionaryValue> GetDictionary() override;
  HoneycombRefPtr<HoneycombListValue> GetList() override;
  bool SetNull() override;
  bool SetBool(bool value) override;
  bool SetInt(int value) override;
  bool SetDouble(double value) override;
  bool SetString(const HoneycombString& value) override;
  bool SetBinary(HoneycombRefPtr<HoneycombBinaryValue> value) override;
  bool SetDictionary(HoneycombRefPtr<HoneycombDictionaryValue> value) override;
  bool SetList(HoneycombRefPtr<HoneycombListValue> value) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_VALUE_CTOCPP_H_
