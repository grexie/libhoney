// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=5793fe937c3f7fb75ee7d79ab6bd6e93411bd954$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_RUN_FILE_DIALOG_CALLBACK_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_RUN_FILE_DIALOG_CALLBACK_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include <vector>
#include "include/capi/honey_browser_capi.h"
#include "include/capi/honey_client_capi.h"
#include "include/honey_browser.h"
#include "include/honey_client.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombRunFileDialogCallbackCToCpp
    : public HoneycombCToCppRefCounted<HoneycombRunFileDialogCallbackCToCpp,
                                 HoneycombRunFileDialogCallback,
                                 honey_run_file_dialog_callback_t> {
 public:
  HoneycombRunFileDialogCallbackCToCpp();
  virtual ~HoneycombRunFileDialogCallbackCToCpp();

  // HoneycombRunFileDialogCallback methods.
  void OnFileDialogDismissed(const std::vector<HoneycombString>& file_paths) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_RUN_FILE_DIALOG_CALLBACK_CTOCPP_H_
