// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=d4a3ee70f42b74bd849215f0f569d07164bf29a7$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_PARAMS_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_PARAMS_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include <vector>
#include "include/capi/honey_context_menu_handler_capi.h"
#include "include/honey_context_menu_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombContextMenuParamsCToCpp
    : public HoneycombCToCppRefCounted<HoneycombContextMenuParamsCToCpp,
                                 HoneycombContextMenuParams,
                                 honey_context_menu_params_t> {
 public:
  HoneycombContextMenuParamsCToCpp();
  virtual ~HoneycombContextMenuParamsCToCpp();

  // HoneycombContextMenuParams methods.
  int GetXCoord() override;
  int GetYCoord() override;
  TypeFlags GetTypeFlags() override;
  HoneycombString GetLinkUrl() override;
  HoneycombString GetUnfilteredLinkUrl() override;
  HoneycombString GetSourceUrl() override;
  bool HasImageContents() override;
  HoneycombString GetTitleText() override;
  HoneycombString GetPageUrl() override;
  HoneycombString GetFrameUrl() override;
  HoneycombString GetFrameCharset() override;
  MediaType GetMediaType() override;
  MediaStateFlags GetMediaStateFlags() override;
  HoneycombString GetSelectionText() override;
  HoneycombString GetMisspelledWord() override;
  bool GetDictionarySuggestions(std::vector<HoneycombString>& suggestions) override;
  bool IsEditable() override;
  bool IsSpellCheckEnabled() override;
  EditStateFlags GetEditStateFlags() override;
  bool IsCustomMenu() override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_PARAMS_CTOCPP_H_
