// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=200acf8c2308059416e4f920d66bb98c6f234ffe$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_context_menu_handler_capi.h"
#include "include/honey_context_menu_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombContextMenuHandlerCToCpp
    : public HoneycombCToCppRefCounted<HoneycombContextMenuHandlerCToCpp,
                                 HoneycombContextMenuHandler,
                                 honey_context_menu_handler_t> {
 public:
  HoneycombContextMenuHandlerCToCpp();
  virtual ~HoneycombContextMenuHandlerCToCpp();

  // HoneycombContextMenuHandler methods.
  void OnBeforeContextMenu(HoneycombRefPtr<HoneycombBrowser> browser,
                           HoneycombRefPtr<HoneycombFrame> frame,
                           HoneycombRefPtr<HoneycombContextMenuParams> params,
                           HoneycombRefPtr<HoneycombMenuModel> model) override;
  bool RunContextMenu(HoneycombRefPtr<HoneycombBrowser> browser,
                      HoneycombRefPtr<HoneycombFrame> frame,
                      HoneycombRefPtr<HoneycombContextMenuParams> params,
                      HoneycombRefPtr<HoneycombMenuModel> model,
                      HoneycombRefPtr<HoneycombRunContextMenuCallback> callback) override;
  bool OnContextMenuCommand(HoneycombRefPtr<HoneycombBrowser> browser,
                            HoneycombRefPtr<HoneycombFrame> frame,
                            HoneycombRefPtr<HoneycombContextMenuParams> params,
                            int command_id,
                            EventFlags event_flags) override;
  void OnContextMenuDismissed(HoneycombRefPtr<HoneycombBrowser> browser,
                              HoneycombRefPtr<HoneycombFrame> frame) override;
  bool RunQuickMenu(HoneycombRefPtr<HoneycombBrowser> browser,
                    HoneycombRefPtr<HoneycombFrame> frame,
                    const HoneycombPoint& location,
                    const HoneycombSize& size,
                    QuickMenuEditStateFlags edit_state_flags,
                    HoneycombRefPtr<HoneycombRunQuickMenuCallback> callback) override;
  bool OnQuickMenuCommand(HoneycombRefPtr<HoneycombBrowser> browser,
                          HoneycombRefPtr<HoneycombFrame> frame,
                          int command_id,
                          EventFlags event_flags) override;
  void OnQuickMenuDismissed(HoneycombRefPtr<HoneycombBrowser> browser,
                            HoneycombRefPtr<HoneycombFrame> frame) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_CONTEXT_MENU_HANDLER_CTOCPP_H_
