// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=915917340262b6243b06022fe96cc1e96625cac9$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_TEST_TRANSLATOR_TEST_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_TEST_TRANSLATOR_TEST_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_HONEYCOMB_SHARED)
#error This file can be included wrapper-side only
#endif

#include <map>
#include <vector>
#include "include/capi/test/honey_translator_test_capi.h"
#include "include/test/honey_translator_test.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class HoneycombTranslatorTestCToCpp
    : public HoneycombCToCppRefCounted<HoneycombTranslatorTestCToCpp,
                                 HoneycombTranslatorTest,
                                 honey_translator_test_t> {
 public:
  HoneycombTranslatorTestCToCpp();
  virtual ~HoneycombTranslatorTestCToCpp();

  // HoneycombTranslatorTest methods.
  void GetVoid() override;
  bool GetBool() override;
  int GetInt() override;
  double GetDouble() override;
  long GetLong() override;
  size_t GetSizet() override;
  bool SetVoid() override;
  bool SetBool(bool val) override;
  bool SetInt(int val) override;
  bool SetDouble(double val) override;
  bool SetLong(long val) override;
  bool SetSizet(size_t val) override;
  bool SetIntList(const std::vector<int>& val) override;
  bool GetIntListByRef(IntList& val) override;
  size_t GetIntListSize() override;
  HoneycombString GetString() override;
  bool SetString(const HoneycombString& val) override;
  void GetStringByRef(HoneycombString& val) override;
  bool SetStringList(const std::vector<HoneycombString>& val) override;
  bool GetStringListByRef(StringList& val) override;
  bool SetStringMap(const StringMap& val) override;
  bool GetStringMapByRef(std::map<HoneycombString, HoneycombString>& val) override;
  bool SetStringMultimap(
      const std::multimap<HoneycombString, HoneycombString>& val) override;
  bool GetStringMultimapByRef(StringMultimap& val) override;
  HoneycombPoint GetPoint() override;
  bool SetPoint(const HoneycombPoint& val) override;
  void GetPointByRef(HoneycombPoint& val) override;
  bool SetPointList(const std::vector<HoneycombPoint>& val) override;
  bool GetPointListByRef(PointList& val) override;
  size_t GetPointListSize() override;
  HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary> GetRefPtrLibrary(int val) override;
  int SetRefPtrLibrary(HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary> val) override;
  HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary> SetRefPtrLibraryAndReturn(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary> val) override;
  int SetChildRefPtrLibrary(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibraryChild> val) override;
  HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary>
  SetChildRefPtrLibraryAndReturnParent(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibraryChild> val) override;
  bool SetRefPtrLibraryList(
      const std::vector<HoneycombRefPtr<HoneycombTranslatorTestRefPtrLibrary>>& val,
      int val1,
      int val2) override;
  bool GetRefPtrLibraryListByRef(RefPtrLibraryList& val,
                                 int val1,
                                 int val2) override;
  size_t GetRefPtrLibraryListSize() override;
  int SetRefPtrClient(HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> val) override;
  HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> SetRefPtrClientAndReturn(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> val) override;
  int SetChildRefPtrClient(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrClientChild> val) override;
  HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> SetChildRefPtrClientAndReturnParent(
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrClientChild> val) override;
  bool SetRefPtrClientList(
      const std::vector<HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient>>& val,
      int val1,
      int val2) override;
  bool GetRefPtrClientListByRef(
      RefPtrClientList& val,
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> val1,
      HoneycombRefPtr<HoneycombTranslatorTestRefPtrClient> val2) override;
  size_t GetRefPtrClientListSize() override;
  HoneycombOwnPtr<HoneycombTranslatorTestScopedLibrary> GetOwnPtrLibrary(int val) override;
  int SetOwnPtrLibrary(HoneycombOwnPtr<HoneycombTranslatorTestScopedLibrary> val) override;
  HoneycombOwnPtr<HoneycombTranslatorTestScopedLibrary> SetOwnPtrLibraryAndReturn(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedLibrary> val) override;
  int SetChildOwnPtrLibrary(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedLibraryChild> val) override;
  HoneycombOwnPtr<HoneycombTranslatorTestScopedLibrary>
  SetChildOwnPtrLibraryAndReturnParent(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedLibraryChild> val) override;
  int SetOwnPtrClient(HoneycombOwnPtr<HoneycombTranslatorTestScopedClient> val) override;
  HoneycombOwnPtr<HoneycombTranslatorTestScopedClient> SetOwnPtrClientAndReturn(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedClient> val) override;
  int SetChildOwnPtrClient(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedClientChild> val) override;
  HoneycombOwnPtr<HoneycombTranslatorTestScopedClient> SetChildOwnPtrClientAndReturnParent(
      HoneycombOwnPtr<HoneycombTranslatorTestScopedClientChild> val) override;
  int SetRawPtrLibrary(HoneycombRawPtr<HoneycombTranslatorTestScopedLibrary> val) override;
  int SetChildRawPtrLibrary(
      HoneycombRawPtr<HoneycombTranslatorTestScopedLibraryChild> val) override;
  bool SetRawPtrLibraryList(
      const std::vector<HoneycombRawPtr<HoneycombTranslatorTestScopedLibrary>>& val,
      int val1,
      int val2) override;
  int SetRawPtrClient(HoneycombRawPtr<HoneycombTranslatorTestScopedClient> val) override;
  int SetChildRawPtrClient(
      HoneycombRawPtr<HoneycombTranslatorTestScopedClientChild> val) override;
  bool SetRawPtrClientList(
      const std::vector<HoneycombRawPtr<HoneycombTranslatorTestScopedClient>>& val,
      int val1,
      int val2) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_TEST_TRANSLATOR_TEST_CTOCPP_H_
