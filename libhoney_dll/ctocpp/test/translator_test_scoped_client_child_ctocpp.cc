// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=b37005aa19984166b1f103e260cb49f6becec364$
//

#include "libhoney_dll/ctocpp/test/translator_test_scoped_client_child_ctocpp.h"

// VIRTUAL METHODS - Body may be edited by hand.

NO_SANITIZE("cfi-icall")
int HoneycombTranslatorTestScopedClientChildCToCpp::GetOtherValue() {
  honey_translator_test_scoped_client_child_t* _struct = GetStruct();
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_other_value)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_other_value(_struct);

  // Return type: simple
  return _retval;
}

NO_SANITIZE("cfi-icall")
int HoneycombTranslatorTestScopedClientChildCToCpp::GetValue() {
  honey_translator_test_scoped_client_t* _struct =
      reinterpret_cast<honey_translator_test_scoped_client_t*>(GetStruct());
  if (HONEYCOMB_MEMBER_MISSING(_struct, get_value)) {
    return 0;
  }

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = _struct->get_value(_struct);

  // Return type: simple
  return _retval;
}

// CONSTRUCTOR - Do not edit by hand.

HoneycombTranslatorTestScopedClientChildCToCpp::
    HoneycombTranslatorTestScopedClientChildCToCpp() {}

// DESTRUCTOR - Do not edit by hand.

HoneycombTranslatorTestScopedClientChildCToCpp::
    ~HoneycombTranslatorTestScopedClientChildCToCpp() {}

template <>
honey_translator_test_scoped_client_child_t*
HoneycombCToCppScoped<HoneycombTranslatorTestScopedClientChildCToCpp,
                HoneycombTranslatorTestScopedClientChild,
                honey_translator_test_scoped_client_child_t>::
    UnwrapDerivedOwn(HoneycombWrapperType type,
                     HoneycombOwnPtr<HoneycombTranslatorTestScopedClientChild> c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
honey_translator_test_scoped_client_child_t*
HoneycombCToCppScoped<HoneycombTranslatorTestScopedClientChildCToCpp,
                HoneycombTranslatorTestScopedClientChild,
                honey_translator_test_scoped_client_child_t>::
    UnwrapDerivedRaw(HoneycombWrapperType type,
                     HoneycombRawPtr<HoneycombTranslatorTestScopedClientChild> c) {
  DCHECK(false) << "Unexpected class type: " << type;
  return nullptr;
}

template <>
HoneycombWrapperType
    HoneycombCToCppScoped<HoneycombTranslatorTestScopedClientChildCToCpp,
                    HoneycombTranslatorTestScopedClientChild,
                    honey_translator_test_scoped_client_child_t>::kWrapperType =
        WT_TRANSLATOR_TEST_SCOPED_CLIENT_CHILD;
