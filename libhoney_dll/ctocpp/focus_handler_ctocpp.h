// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=6a454cd9846e772380a72c5429d114f73cc3c1f5$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_FOCUS_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_FOCUS_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_focus_handler_capi.h"
#include "include/honey_focus_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombFocusHandlerCToCpp : public HoneycombCToCppRefCounted<HoneycombFocusHandlerCToCpp,
                                                         HoneycombFocusHandler,
                                                         honey_focus_handler_t> {
 public:
  HoneycombFocusHandlerCToCpp();
  virtual ~HoneycombFocusHandlerCToCpp();

  // HoneycombFocusHandler methods.
  void OnTakeFocus(HoneycombRefPtr<HoneycombBrowser> browser, bool next) override;
  bool OnSetFocus(HoneycombRefPtr<HoneycombBrowser> browser, FocusSource source) override;
  void OnGotFocus(HoneycombRefPtr<HoneycombBrowser> browser) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_FOCUS_HANDLER_CTOCPP_H_
