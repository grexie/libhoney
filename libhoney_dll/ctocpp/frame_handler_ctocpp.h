// Copyright (c) 2023 The Honeycomb Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the Honeycomb translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=a1366f78329888eadf9121d7df819687d82a40c7$
//

#ifndef HONEYCOMB_LIBHONEY_DLL_CTOCPP_FRAME_HANDLER_CTOCPP_H_
#define HONEYCOMB_LIBHONEY_DLL_CTOCPP_FRAME_HANDLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_HONEYCOMB_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/honey_frame_handler_capi.h"
#include "include/honey_frame_handler.h"
#include "libhoney_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class HoneycombFrameHandlerCToCpp : public HoneycombCToCppRefCounted<HoneycombFrameHandlerCToCpp,
                                                         HoneycombFrameHandler,
                                                         honey_frame_handler_t> {
 public:
  HoneycombFrameHandlerCToCpp();
  virtual ~HoneycombFrameHandlerCToCpp();

  // HoneycombFrameHandler methods.
  void OnFrameCreated(HoneycombRefPtr<HoneycombBrowser> browser,
                      HoneycombRefPtr<HoneycombFrame> frame) override;
  void OnFrameAttached(HoneycombRefPtr<HoneycombBrowser> browser,
                       HoneycombRefPtr<HoneycombFrame> frame,
                       bool reattached) override;
  void OnFrameDetached(HoneycombRefPtr<HoneycombBrowser> browser,
                       HoneycombRefPtr<HoneycombFrame> frame) override;
  void OnMainFrameChanged(HoneycombRefPtr<HoneycombBrowser> browser,
                          HoneycombRefPtr<HoneycombFrame> old_frame,
                          HoneycombRefPtr<HoneycombFrame> new_frame) override;
};

#endif  // HONEYCOMB_LIBHONEY_DLL_CTOCPP_FRAME_HANDLER_CTOCPP_H_
